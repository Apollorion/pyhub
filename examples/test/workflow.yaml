concurrency:
  group: main
env:
  A: 'false'
  TEST: test
jobs:
  test1:
    env:
      this: isgood
    needs:
    - test2
    outputs:
      result: ${{ steps.run.outputs.result }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    - uses: actions/install-python
      with:
        test: 'yes'
    - name: Install Requirements
      run: python -m pip install requirements.txt
    - id: run
      name: test1
      run: |
        python <<EOF | tee /tmp/capture.out
        def test1(output_from_test_2):
            print(output_from_test_2)


        import sys, os
        sys.stdout = open(os.devnull, 'w')
        pyresult = test1("${{ needs.test2.outputs.run }}")
        sys.stdout = sys.__stdout__
        print(pyresult)
        EOF
        result=$(cat /tmp/capture.out)
        echo "::set-output name=result::${result}"
  test2:
    if: github.ref_name == 'main'
    needs: []
    outputs:
      result: ${{ steps.run.outputs.result }}
    runs-on: custom-runner
    steps:
    - name: Install Requirements
      run: python -m pip install requirements.txt
    - id: run
      name: test2
      run: |
        python <<EOF | tee /tmp/capture.out
        def test2():
            return "test2 returned"


        import sys, os
        sys.stdout = open(os.devnull, 'w')
        pyresult = test2()
        sys.stdout = sys.__stdout__
        print(pyresult)
        EOF
        result=$(cat /tmp/capture.out)
        echo "::set-output name=result::${result}"
name: My Amazing Test Workflow
'on':
  push: {}
permissions:
- write-all
